import pandas as pd
import numpy as np

# Classe que representa a tabela do imposto de renda (IR)
class TabelaIr:
    def __init__(self):
        # Lista de dicionarios com as faixas salariais e valores
        self.tabela = [
            {"Faixa":(0, 2259.20), "Aliquota": 0, "Dedu√ß√£o": 0}, 
            {"Faixa":(2259.21, 2826.65), "Aliquota": 7.5, "Dedu√ß√£o": 169.44},
            {"Faixa":(2826.66, 3751.05), "Aliquota": 15, "Dedu√ß√£o": 381.44},
            {"Faixa":(3751.06, 4664.68), "Aliquota": 22.5, "Dedu√ß√£o": 662.77},
            {"Faixa":(4664.69, float("inf")), "Aliquota": 27.5, "Dedu√ß√£o": 896.00}
        ]
        
    def calcular_imposto(self, salario_bruto):
        imposto = 0
        for faixa in self.tabela:
            if faixa["Faixa"][0] < salario_bruto <= faixa["Faixa"][1]:
                imposto = (salario_bruto * faixa["Aliquota"]) / 100 - faixa["Dedu√ß√£o"]
                break
        return imposto

# Criar dados com o numpy
nomes = ['Caio', 'Myke', 'Gustavo', 'Jo√£o', 'Gabriel', 'Luiz']
idades = np.random.randint(20, 50, size=len(nomes))
salarios = np.random.randint(3000, 10000, size=len(nomes))

# Criar o dataframe com o pandas
df = pd.DataFrame({
    "Nome": nomes,
    "Idade": idades,
    "Sal√°rios": salarios
})

print(f"\n üìä Dados iniciais do DataFrame:\n{df}")

# Criar inst√¢ncia da tabela de impostos
tabelaIR = TabelaIr()

# Calcular o imposto para cada pessoa no dataframe
df['Imposto'] = df['Sal√°rios'].apply(tabelaIR.calcular_imposto) #Fun√ß√£o apply aplica uma fun√ß√£o de classe a tabela 

print(f"\nDataframe com nova coluna de impostos calculados: \n{df}")

# Usando as fun√ß√µes do numpy no DataFrame
print(f"Idade m√©dia do grupo: \n{np.mean(df['Idade']):.2f}")
print(f"Sal√°rio m√©dio do grupo: \n{np.mean(df['Sal√°rios']):.2f}")

# Filtrar com pandas pessoas com sal√°rio acima da m√©dia
media_salario = df['Sal√°rios'].mean()
print(f'\nPessoas com sal√°rio acima da m√©dia: \n{df[df['Sal√°rios'] > media_salario]}')

# Estat√≠sticas resumidas
print(f"\nResumo estat√≠stico (pandas): \n{df.describe()}")